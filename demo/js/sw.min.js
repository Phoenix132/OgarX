(function(){function b(d,e,g){function a(j,i){if(!e[j]){if(!d[j]){var f="function"==typeof require&&require;if(!i&&f)return f(j,!0);if(h)return h(j,!0);var c=new Error("Cannot find module '"+j+"'");throw c.code="MODULE_NOT_FOUND",c}var k=e[j]={exports:{}};d[j][0].call(k.exports,function(b){var c=d[j][1][b];return a(c||b)},k,k.exports,b,d,e,g)}return e[j].exports}for(var h="function"==typeof require&&require,c=0;c<g.length;c++)a(g[c]);return a}return b})()({1:[function(a,b){b.exports=class{constructor(a=0){this.id=a,this.name="",this.skin="",this.spawn=!1,this.alive=!1,this.spectate=null,this.mouseX=0,this.mouseY=0,this.ejectMarco=!1,this.splitAttempts=0,this.ejectAttempts=0,this.lastEjectTick=0,this.lastSpawnTick=0,this.viewportX=0,this.viewportY=0,this.viewportHW=0,this.viewportHH=0,this.maxScore=0,this.score=0,this.handle=null}reset(){this.handle=null,this.alive=!1,this.spectate=null,this.splitAttempts=0,this.ejectAttempts=0,this.lastEjectTick=0,this.lastSpawnTick=0,this.viewportX=0,this.viewportY=0,this.viewportHW=0,this.viewportHH=0,this.score=0}}},{}],2:[function(a,b){b.exports=class{constructor(a){this.game=a,this.controller=null}onSpawn(){}onUpdate(){}onError(){}onChat(){}}},{}],3:[function(a,b){const c=a("./controller"),d=a("../physics/engine"),e=250;b.exports=class{constructor(){this.controls=Array.from({length:e},(a,b)=>new c(b)),this.engine=new d(this),this.handles=0}addHandler(a){if(this.isFull&&a.onError("Server full"),a.controller)return;let b=1;for(;this.controls[b].handle;)b++;this.controls[b].handle=a,a.controller=this.controls[b],this.handles++}removeHandler(a){a.controller&&(this.engine.kill(a.controller.id),a.controller.reset(),a.controller=null,this.handles--)}get isFull(){return this.handles==e}}},{"../physics/engine":14,"./controller":1}],4:[function(a,b){b.exports=class{constructor(a){this.game=a}broadcast(a,b){for(const c of this.game.controls)c.handle&&c.handle.onChat(a,b)}}},{}],5:[function(a,b){b.exports=class{constructor(a){a.ws=this,this.port=a,this.readyState=WebSocket.OPEN,a.onmessage=a=>{const{data:b}=a;"message"===b.event?this.onmessage(new DataView(b.message)):"close"===b.event&&this.onclose({code:b.code,reason:b.message})},a.start(),a.postMessage({event:"open"}),this.subscribe=this.onmessage=this.onclose=()=>{}}send(a){this.port.postMessage({event:"message",message:a},[a])}end(a=1006,b=""){this.port.postMessage({event:"close",code:a,reason:b}),this.onclose(a,b)}}},{}],6:[function(a,b){b.exports=class{static handshake(){return!1}constructor(a){this.handler=a}onMessage(){}onUpdate(){}onSpawn(){}onChat(){}}},{}],7:[function(a,b){b.exports=[a("./ogarx")]},{"./ogarx":8}],8:[function(a,b){const c=a("../protocol"),d=a("../reader"),e=a("../writer");b.exports=class extends c{static handshake(a){const b=new d(a);return 3==b.length&&69==b.readUInt8()&&420==b.readInt16()}constructor(a){super(a),this.lastVisible=new Set,this.currVisible=new Set,this.sendInitPacket()}sendInitPacket(){const a=new e;a.writeUInt8(1),a.writeUInt16(this.handler.controller.id),a.writeUInt16(this.handler.game.engine.options.MAP_HW),a.writeUInt16(this.handler.game.engine.options.MAP_HH),this.handler.ws.send(a.finalize(),!0)}onMessage(a){const b=new d(a),c=b.readUInt8(),e=this.handler.controller;switch(c){case 1:e.name=b.readUTF16String(),e.skin=b.readUTF16String(),e.spawn=!0,console.log(`Player#${e.id}: `+`{ name: ${e.name}, `+`skin: ${e.skin} } requested spawn`);break;case 2:if(e.alive)return;case 3:e.mouseX=b.readFloat32(),e.mouseY=b.readFloat32();const a=b.readUInt8(),d=b.readUInt8(),f=b.readUInt8(),g=b.readUInt8();e.splitAttempts+=d,e.ejectAttempts+=f,e.ejectMarco=!!g;break;case 69:const h=new ArrayBuffer(1);new Uint8Array(h)[0]=69,this.handler.ws.send(h,!0);break;default:console.warn(`Unknown OP: ${c}`);}}onUpdate(){const a=this.handler.game.engine,b=a.cells,c=a.query(this.handler.controller).filter(a=>b[a].type!=255||1<b[a].age);this.currVisible=new Set(c);const d=new e;d.writeUInt8(4),d.writeFloat32(this.handler.controller.viewportX),d.writeFloat32(this.handler.controller.viewportY);const f=[],g=[];for(const a of c)this.lastVisible.has(a)?b[a].type!=254&&g.push(a):f.push(a);for(const a of f){const c=b[a];d.writeUInt16(a),d.writeUInt16(c.isDead?251:c.type),d.writeInt16(~~c.x),d.writeInt16(~~c.y),d.writeUInt16(~~c.r)}d.writeUInt16(0);for(const a of g){const c=b[a];d.writeUInt16(a),d.writeInt16(~~c.x),d.writeInt16(~~c.y),d.writeUInt16(~~c.r)}d.writeUInt16(0);const h=[],i=[];for(const a of this.lastVisible){if(this.currVisible.has(a))continue;const c=b[a];c.shouldRemove&&c.eatenBy?h.push(a):i.push(a)}for(const a of h)d.writeUInt16(a),d.writeUInt16(b[a].eatenBy);d.writeUInt16(0);for(const a of i)d.writeInt16(a);d.writeUInt16(0),this.handler.ws.send(d.finalize(),!0),this.lastVisible=this.currVisible}onSpawn(a){if(this.handler.controller==a){const a=new ArrayBuffer(1);new Uint8Array(a)[0]=2,this.handler.ws.send(a,!0),this.lastVisible.clear()}const b=new e;b.writeUInt8(3),b.writeUInt16(a.id),b.writeUTF16String(a.name),b.writeUTF16String(a.skin),this.handler.ws.send(b.finalize(),!0)}onChat(){}}},{"../protocol":6,"../reader":9,"../writer":12}],9:[function(a,b){var c=String.fromCharCode;b.exports=class{constructor(a,b=!0){this.view=a,this.offset=0,this.le=b}get length(){return this.view.byteLength}readUInt8(){return this.view.getUint8(this.offset++)}readInt8(){return this.view.getInt8(this.offset++)}readUInt16(){const b=this.view.getUint16(this.offset,this.le);return this.offset+=2,b}readInt16(){const b=this.view.getUint16(this.offset,this.le);return this.offset+=2,b}readUInt32(){const b=this.view.getUint32(this.offset,this.le);return this.offset+=4,b}readInt32(){const b=this.view.getInt32(this.offset,this.le);return this.offset+=4,b}readFloat32(){const b=this.view.getFloat32(this.offset,this.le);return this.offset+=4,b}readFloat64(){const b=this.view.getFloat64(this.offset,this.le);return this.offset+=8,b}skip(a){this.offset+=a}readUTF8String(){const a=[];for(;this.offset<this.view.byteLength;){const b=this.readUInt8();if(!b)break;a.push(c(b))}return a.join("")}readUTF16String(){const a=[];for(;this.offset<this.view.byteLength;){const b=this.readUInt16();if(!b)break;a.push(c(b))}return a.join("")}}},{}],10:[function(a,b){const c=a("../game/handle"),d=a("./protocols");b.exports=class extends c{constructor(a,b){super(a),this.ws=b,this.protocol=null,this.ws.subscribe("broadcast")}onSpawn(a){this.protocol&&this.protocol.onSpawn(a)}onUpdate(){this.protocol&&this.protocol.onUpdate()}onMessage(a){try{if(!this.protocol){const b=d.find(b=>b.handshake(a));b||this.ws.end(1003,"Ambiguous protocol"),this.protocol=new b(this)}else this.protocol.onMessage(a)}catch(a){console.error(a)}}onChat(a,b){this.protocol&&this.protocol.onChat(a,b)}}},{"../game/handle":2,"./protocols":7}],11:[function(a,b){const c=a("./socket"),d=a("./fake-socket"),e=a("./chat"),f=a("../game");b.exports=class{constructor(){this.game=new f,this.ports=new Set}open(){self.onconnect=a=>{console.log("Received connection");const b=a.source,e=new d(b);e.sock=new c(this.game,e),this.game.addHandler(e.sock),this.ports.add(b),e.onmessage=a=>{b.lastMessage=Date.now(),e.sock.onMessage(a)},e.onclose=(a,c)=>{console.log(`Disconnected: (handle#${e.sock.controller.id}) code: ${a}, message: ${c}`),this.game.removeHandler(e),this.ports.delete(b)}},this.game.chat=new e(this.game),setInterval(()=>{for(const a of this.ports)75e3<Date.now()-a.lastMessage&&a.ws.end(1001,"No PING received")},3e3)}close(){for(const a of this.ports)a.close()}}},{"../game":3,"./chat":4,"./fake-socket":5,"./socket":10}],12:[function(a,b){const c=new DataView(new ArrayBuffer(1048576));b.exports=class{constructor(a=!0){this.offset=0,this.le=a}writeUInt8(b){c.setUint8(this.offset++,b)}writeInt8(b){c.setInt8(this.offset++,b)}writeUInt16(b){c.setUint16(this.offset,b,this.le),this.offset+=2}writeInt16(b){c.setInt16(this.offset,b,this.le),this.offset+=2}writeUInt32(b){c.setUint32(this.offset,b,this.le),this.offset+=4}writeInt32(b){c.setInt32(this.offset,b,this.le),this.offset+=4}writeFloat32(b){c.setFloat32(this.offset,b,this.le),this.offset+=4}writeFloat64(b){c.setFloat64(this.offset,b,this.le),this.offset+=8}writeUTF8String(b){for(let a=0;a<b.length;a++)this.writeUInt8(b.charCodeAt(a));this.writeUInt8(0)}writeUTF16String(b){for(let a=0;a<b.length;a++)this.writeUInt16(b.charCodeAt(a));this.writeUInt16(0)}finalize(){return c.buffer.slice(0,this.offset)}}},{}],13:[function(a,b){const c=1,d=2,e=8,f=32,g={252:"Mother Cell",253:"Virus",254:"Pellet",255:"Ejected"};b.exports=class{constructor(a,b){this.__root=null,this.view=a,this.id=b}get x(){return this.view.getFloat32(0,!0)}set x(a){this.view.setFloat32(0,a,!0)}get y(){return this.view.getFloat32(4,!0)}set y(a){this.view.setFloat32(4,a,!0)}get r(){return this.view.getFloat32(8,!0)}set r(a){this.view.setFloat32(8,a,!0)}get type(){return this.view.getUint8(12)}set type(a){this.view.setUint8(12,a)}get flags(){return this.view.getUint8(13)}remove(){this.view.setUint8(13,c|f)}resetFlag(){this.isDead?this.view.setUint8(13,e|c):this.view.setUint8(13,c)}get exists(){return this.view.getUint8(13)&c}get isUpdated(){return this.view.getUint8(13)&d}set updated(a){a&&this.view.setUint8(13,this.view.getUint8(13)|d)}get isInside(){this.view.getUint8(13)&4}get isDead(){return this.view.getUint8(13)&e}get shouldAuto(){return this.view.getUint8(13)&16}get shouldRemove(){return this.view.getUint8(13)&f}set merge(a){a&&this.view.setUint8(13,this.view.getUint8(13)|64)}get popped(){return this.view.getUint8(13)&128}get eatenBy(){return this.view.getUint16(14,!0)}get age(){return this.view.getUint32(16,!0)}get boostX(){return this.view.getFloat32(20,!0)}set boostX(a){this.view.setFloat32(20,a,!0)}get boostY(){return this.view.getFloat32(24,!0)}set boostY(a){this.view.setFloat32(24,a,!0)}get boost(){return this.view.getFloat32(28,!0)}set boost(a){this.view.setFloat32(28,a,!0)}toString(){const a=g[this.type];return`Cell#${this.id}[type=${a?`${a}(${this.type})`:`Player#${this.type}`},x=${this.x.toFixed(2)},y=${this.y.toFixed(2)},r=${this.r.toFixed(2)},mass=${(this.r*this.r/1e5).toFixed(1)}k,flags=${this.flags.toString(2).padStart(8,"0")}]`}}},{}],14:[function(require,module,exports){var _Mathmin=Math.min,_Mathsqrt=Math.sqrt;"undefined"==typeof performance&&eval(`global.performance = require("perf_hooks").performance;`);const Cell=require("./cell"),QuadTree=require("./quadtree"),Controller=require("../game/controller"),DefaultSettings={TPS:25,MAX_CELL_PER_TICK:50,CELL_LIMIT:65536,QUADTREE_MAX_ITEMS:16,QUADTREE_MAX_LEVEL:16,MAP_HW:8191,MAP_HH:8191,SAFE_SPAWN_TRIES:64,SAFE_SPAWN_RADIUS:1.5,PELLET_COUNT:1e3,PELLET_SIZE:10,VIRUS_COUNT:30,VIRUS_SIZE:100,VIRUS_FEED_TIMES:7,VIRUS_SPLIT_BOOST:780,VIRUS_MONOTONE_POP:!1,MOTHER_CELL_COUNT:0,MOTHER_CELL_SIZE:149,PLAYER_SPEED:1,PLAYER_SPAWN_DELAY:3e3,PLAYER_DECAY_SPEED:.001,PLAYER_DECAY_MIN_SIZE:1e3,PLAYER_AUTOSPLIT_SIZE:1500,PLAYER_MAX_CELLS:16,PLAYER_SPAWN_SIZE:32,PLAYER_SPLIT_BOOST:780,PLAYER_SPLIT_DIST:40,PLAYER_SPLIT_CAP:255,PLAYER_MIN_SPLIT_SIZE:60,PLAYER_MIN_EJECT_SIZE:60,PLAYER_NO_MERGE_DELAY:15,PLAYER_NO_COLLI_DELAY:13,PLAYER_MERGE_TIME:1,PLAYER_MERGE_INCREASE:.02,PLAYER_MERGE_NEW_VER:!0,PLAYER_VIEW_SCALE:1,PLAYER_DEAD_DELAY:5,EJECT_DISPERSION:.3,EJECT_SIZE:38,EJECT_LOSS:43,EJECT_BOOST:780,EJECT_DELAY:80,WORLD_RESTART_MULT:.75,WORLD_KILL_OVERSIZE:!1,EAT_OVERLAP:3,EAT_MULT:1.140175425099138},DEAD_CELL_TYPE=251,MOTHER_CELL_TYPE=252,VIRUS_TYPE=253,PELLET_TYPE=254,EJECTED_TYPE=255,BYTES_PER_CELL=32;module.exports=class{constructor(a){this.game=a,this.options=Object.assign({},DefaultSettings)}setOptions(a){Object.assign(this.options,a),this.counters=Array.from({length:256},()=>new Set),this.shouldRestart=!1,this.__next_cell_id=1}async init(a){if(!this.wasm){this.__start=performance.now(),this.__ltick=performance.now(),this.memory=new WebAssembly.Memory({initial:1e3});const b=await WebAssembly.instantiate(a,{env:{memory:this.memory,console_log:a=>{250<this.cells[a].type}}});this.wasm=b.instance.exports,this.bindBuffers()}}bindBuffers(){new Uint32Array(this.memory.buffer).fill(0),this.cells=Array.from({length:this.options.CELL_LIMIT},(a,b)=>new Cell(new DataView(this.memory.buffer,b*BYTES_PER_CELL,BYTES_PER_CELL),b)),this.cellCount=0,this.tree=new QuadTree(this.cells,0,0,this.options.MAP_HW,this.options.MAP_HH,this.options.QUADTREE_MAX_LEVEL,this.options.QUADTREE_MAX_ITEMS),this.indices=0,this.indicesPtr=BYTES_PER_CELL*this.options.CELL_LIMIT,this.resolveIndices=new DataView(this.memory.buffer,this.indicesPtr),this.treePtr=0,this.treeBuffer=null,this.profiler=[],this.debug=!1}start(){if(this.updateInterval)return;this.__ltick=performance.now();const a=1e3/this.options.TPS;this.updateInterval=setInterval(()=>{const b=performance.now();this.tick((b-this.__ltick)/a),this.__ltick=b,this.profiler.push((performance.now()-b)/a),this.profiler.length>this.options.TPS&&this.profiler.shift()},a),this.debug&&setInterval(()=>{console.log("Cells: "+this.cellCount+", "+(100*(this.profiler.reduce((c,a)=>c+a,0)/this.profiler.length)).toFixed(3)+"%")},1e3)}stop(){this.updateInterval&&clearInterval(this.updateInterval),this.updateInterval=null}get stopped(){return!this.updateInterval}get __tick(){return Date.now()-this.__start}tick(a=1){var b=Math.PI,c=Math.round,d=Math.max,e=Math.pow,f=Math.cos,g=Math.sin,h=Math.atan2,i=Math.SQRT2;if(this.treePtr)for(const a in this.game.controls){const b=this.game.controls[a];b.handle&&b.handle.onUpdate()}for(let b=0;b<this.options.MAX_CELL_PER_TICK&&this.counters[PELLET_TYPE].size<this.options.PELLET_COUNT;b++){const a=this.getSafeSpawnPoint(this.options.PELLET_SIZE);this.newCell(a[0],a[1],this.options.PELLET_SIZE,PELLET_TYPE)}for(let b=0;b<this.options.MAX_CELL_PER_TICK&&this.counters[VIRUS_TYPE].size<this.options.VIRUS_COUNT;b++){const a=this.getSafeSpawnPoint(this.options.VIRUS_SIZE);this.newCell(a[0],a[1],this.options.VIRUS_SIZE,VIRUS_TYPE)}for(let b=0;b<this.options.MAX_CELL_PER_TICK&&this.counters[MOTHER_CELL_TYPE].size<this.options.MOTHER_CELL_COUNT;b++){const a=this.getSafeSpawnPoint(this.options.MOTHER_CELL_SIZE);this.newCell(a[0],a[1],this.options.MOTHER_CELL_SIZE,MOTHER_CELL_TYPE)}const j=this.__tick;for(const b in this.game.controls){const c=this.game.controls[b];if(!c.handle)continue;for(let a=this.options.PLAYER_SPLIT_CAP;0<c.splitAttempts&&0<a--;){for(const a of[...this.counters[b]]){const e=this.cells[a];if(this.counters[b].size>=this.options.PLAYER_MAX_CELLS)break;if(e.r<this.options.PLAYER_MIN_SPLIT_SIZE)continue;let f=c.mouseX-e.x,g=c.mouseY-e.y,h=_Mathsqrt(f*f+g*g);1>h?(f=1,g=0,h=1):(f/=h,g/=h),this.splitFromCell(e,e.r/i,f,g,this.options.PLAYER_SPLIT_BOOST)}c.splitAttempts--}if(j>=c.lastEjectTick+this.options.EJECT_DELAY&&(0<c.ejectAttempts--||c.ejectMarco)){const e=this.options.EJECT_LOSS*this.options.EJECT_LOSS;for(const i of[...this.counters[b]]){const b=this.cells[i];if(b.r<this.options.PLAYER_MIN_EJECT_SIZE)continue;let j=c.mouseX-b.x,k=c.mouseY-b.y,l=_Mathsqrt(j*j+k*k);1>l?(j=1,k=0,l=1):(j/=l,k/=l);const d=b.x+j*b.r,m=b.y+k*b.r,n=h(j,k)-this.options.EJECT_DISPERSION+2*Math.random()*this.options.EJECT_DISPERSION;this.newCell(d,m,this.options.EJECT_SIZE,EJECTED_TYPE,g(n),f(n),this.options.EJECT_BOOST),b.r=_Mathsqrt(b.r*b.r-e),b.updated=!0}c.lastEjectTick=j}if(!this.counters[b].size&&!c.spawn){c.viewportX=0,c.viewportY=0,c.viewportHW=960,c.viewportHH=540;continue}let k=0,l=0,m=0,n=0,a=0,o=0,p=0,q=this.options.MAP_HW,r=-this.options.MAP_HW,s=this.options.MAP_HH,t=-this.options.MAP_HH;for(const c of this.counters[b]){const b=this.cells[c];n+=b.x*b.r,a+=b.y*b.r,q=b.x<q?b.x:q,r=b.x>r?b.x:r,s=b.y<s?b.y:s,t=b.y>t?b.y:t,o+=b.r*b.r/100,k+=b.r}if(k=k||1,p=e(this.counters[b].size+50,.1),c.viewportX=n/k,c.viewportY=a/k,k=(p+1)*_Mathsqrt(100*o),l=m=d(k,4e3),l=d(l,1.75*(c.viewportX-q)),l=d(l,1.75*(r-c.viewportX)),m=d(m,1.75*(c.viewportY-s)),m=d(m,1.75*(t-c.viewportY)),c.viewportHW=l*this.options.PLAYER_VIEW_SCALE,c.viewportHH=m*this.options.PLAYER_VIEW_SCALE,c.score=o,c.maxScore=o>c.maxScore?o:c.maxScore,c.score>this.options.MAP_HH*this.options.MAP_HW/100*this.options.WORLD_RESTART_MULT)if(this.options.WORLD_KILL_OVERSIZE){for(const a of this.counters[b])this.cells[a].remove();this.counters[b].clear()}else this.shouldRestart=!0;if(c.spawn&&(j<=this.options.PLAYER_SPAWN_DELAY||j>=c.lastSpawnTick+this.options.PLAYER_SPAWN_DELAY)){c.spawn=!1,c.lastSpawnTick=j,this.kill(c.id);const a=this.getSafeSpawnPoint(this.options.PLAYER_SPAWN_SIZE);this.newCell(a[0],a[1],this.options.PLAYER_SPAWN_SIZE,~~b);for(const a of this.game.controls)a.handle&&(c.handle.onSpawn(a),c!=a&&a.handle.onSpawn(c));console.log(`Spawned controller#${c.id} at x: ${a[0]}, y: ${a[1]}`)}else c.spawn=!1;c.handle.onUpdate(),c.alive=!this.counters[b].size}this.wasm.update(0,this.treePtr,a);const k=c(25*this.options.PLAYER_MERGE_TIME);for(const b in this.game.controls){const f=this.game.controls[b];if(f.handle)for(const g of this.counters[b]){const b=this.cells[g];if(0<this.options.PLAYER_MERGE_TIME){const a=c(25*b.r*this.options.PLAYER_MERGE_INCREASE),e=d(this.options.PLAYER_NO_MERGE_DELAY,this.options.PLAYER_MERGE_NEW_VER?d(k,a):k+a);b.merge=b.age>=e}else b.merge=b.age>=this.options.PLAYER_NO_MERGE_DELAY;let h=f.mouseX-b.x,i=f.mouseY-b.y;const j=_Mathsqrt(h*h+i*i);if(1>j)continue;h/=j,i/=j;const l=88*e(b.r,-.4396754)*this.options.PLAYER_SPEED,n=_Mathmin(l,j)*a;b.x+=h*n,b.y+=i*n}}this.wasm.decay_and_auto(0,this.treePtr,a,this.options.PLAYER_AUTOSPLIT_SIZE,this.options.PLAYER_DECAY_SPEED,this.options.PLAYER_DECAY_MIN_SIZE);for(const c of this.cells)if(c.shouldAuto){const a=1+this.options.PLAYER_MAX_CELLS-this.counters[c.type].size;if(0>=a)continue;const d=_Mathmin(Math.ceil(c.r*c.r/this.options.PLAYER_AUTOSPLIT_SIZE/this.options.PLAYER_AUTOSPLIT_SIZE),a),e=_Mathmin(_Mathsqrt(c.r*c.r/d),this.options.PLAYER_AUTOSPLIT_SIZE);for(let a=1;a<d;a++){const a=2*Math.random()*b;this.splitFromCell(c,e,g(a),f(a),this.options.PLAYER_SPLIT_BOOST)}c.r=e,c.updated=!0}this.wasm.edge_check(0,this.treePtr,-this.options.MAP_HW,this.options.MAP_HW,-this.options.MAP_HH,this.options.MAP_HH);for(const b of this.cells)b.exists&&(!(250<b.type)||b.isUpdated)&&this.tree.update(b);this.sortIndices(),this.serialize();const l=_Mathsqrt(this.options.VIRUS_SIZE*this.options.VIRUS_SIZE+this.options.EJECT_SIZE*this.options.EJECT_SIZE*this.options.VIRUS_FEED_TIMES);this.wasm.resolve(0,this.indicesPtr,this.treePtr,this.treePtr,this.stackPtr,this.options.PLAYER_NO_MERGE_DELAY,this.options.PLAYER_NO_COLLI_DELAY,this.options.EAT_OVERLAP,this.options.EAT_MULT,l,this.options.TPS*this.options.PLAYER_DEAD_DELAY);for(const c of this.cells)if(c.exists)if(c.shouldRemove)this.tree.remove(c),this.counters[c.type].delete(c.id),this.cellCount--;else if(!c.popped)c.updated&&this.tree.update(c);else if(c.type==VIRUS_TYPE){c.r=this.options.VIRUS_SIZE,this.tree.update(c);const a=h(c.boostX,c.boostY);this.newCell(c.x,c.y,this.options.VIRUS_SIZE,VIRUS_TYPE,g(a),f(a),this.options.VIRUS_SPLIT_BOOST)}else{const a=this.distributeCellMass(c);for(const d of a){const a=2*Math.random()*b;this.splitFromCell(c,_Mathsqrt(100*d),g(a),f(a),this.options.PLAYER_SPLIT_BOOST)}}this.treePtr=BYTES_PER_CELL*this.options.CELL_LIMIT,this.treeBuffer=new DataView(this.memory.buffer,this.treePtr),this.serialize(),this.leaderboard=this.game.controls.filter(a=>a.score).sort((c,a)=>a.score-c.score)}kill(a){for(const b of this.counters[a]){const a=this.cells[b],c=this.newCell(a.x,a.y,a.r,DEAD_CELL_TYPE,a.boostX,a.boostY,a.boost,!1);this.tree.swap(a,c),a.remove()}this.counters[a].clear()}splitFromCell(a,b,c,d,e){a.r=_Mathsqrt(a.r*a.r-b*b),a.updated=!0;const f=a.x+this.options.PLAYER_SPLIT_DIST*c,g=a.y+this.options.PLAYER_SPLIT_DIST*d;this.newCell(f,g,b,a.type,c,d,e)}distributeCellMass(a){var b=Math.floor;let c=this.options.PLAYER_MAX_CELLS-this.counters[a.type].size;if(0>=c)return[];let d=this.options.PLAYER_MIN_SPLIT_SIZE;d=d*d/100;const e=a.r*a.r/100;if(this.options.VIRUS_MONOTONE_POP){const a=_Mathmin(b(e/d),c);return Array(a).fill(e/(a+1))}if(e/c<d){let a=2,b=NaN;for(;(b=e/(a+1))>=d&&2*a<=c;)a*=2;return Array(a).fill(b)}const f=[];let g=e/2,h=e/2;for(;0<c&&!(g/c<d);){for(;g>=h&&1<c;)g/=2;f.push(g),h-=g,c--}return g=h/c,f.concat(Array(c).fill(g))}newCell(a,b,c,d,e=0,f=0,g=0,h=!0){if(this.cellCount>=this.options.CELL_LIMIT-1)return this.stop(),console.log("CAN NOT SPAWN NEW CELL: "+this.cellCount);for(;this.cells[this.__next_cell_id].exists;)this.__next_cell_id=(this.__next_cell_id+1)%this.options.CELL_LIMIT||1;const i=this.cells[this.__next_cell_id];return i.x=a,i.y=b,i.r=c,i.type=d,i.boostX=e,i.boostY=f,i.boost=g,i.resetFlag(),h&&this.tree.insert(i),this.counters[i.type].add(i.id),this.cellCount++,i}randomPoint(a){const b=this.options.MAP_HW-a,c=this.options.MAP_HH-a;return[2*Math.random()*b-b,2*Math.random()*c-c]}getSafeSpawnPoint(a){if(!this.treePtr)return this.randomPoint(a);for(let b=this.options.SAFE_SPAWN_TRIES;--b;){const b=this.randomPoint(a);if(0<this.wasm.is_safe(0,b[0],b[1],a*this.options.SAFE_SPAWN_RADIUS,this.treePtr,this.stackPtr))return b}return this.randomPoint(a)}sortIndices(){let a=0;for(let b=0;b<this.counters.length;b++)if(b!=PELLET_TYPE)if(250<b)for(const c of this.counters[b])this.resolveIndices.setUint16(a,c,!0),a+=2;else[...this.counters[b]].sort((c,a)=>this.cells[a].r-this.cells[c].r).forEach(b=>{this.resolveIndices.setUint16(a,b,!0),a+=2});this.treePtr=this.indicesPtr+a,this.treeBuffer=new DataView(this.memory.buffer,this.treePtr)}serialize(){this.stackPtr=this.tree.serialize(this.treeBuffer)+this.treePtr}query(a){let b=this.stackPtr+4*this.options.QUADTREE_MAX_LEVEL+20;b%2&&b++;const c=this.wasm.select(0,this.treePtr,this.treePtr,this.stackPtr,b,a.viewportX-a.viewportHW,a.viewportX+a.viewportHW,a.viewportY-a.viewportHH,a.viewportY+a.viewportHH);return new Uint16Array(this.memory.buffer,b,c)}},module.exports.DefaultSettings=DefaultSettings},{"../game/controller":1,"./cell":13,"./quadtree":15}],15:[function(a,b){const c=(a,b)=>{if(a.y-a.r>b.y){if(a.x+a.r<b.x)return 0;if(a.x-a.r>b.x)return 1}else if(a.y+a.r<b.y){if(a.x+a.r<b.x)return 2;if(a.x-a.r>b.x)return 3}return-1},d=(a,b)=>a.x-a.r>b.l&&a.x+a.r<b.r&&a.y+a.r<b.t&&a.y-a.r>b.b;class e{constructor(a,b,c,d,e,f){this.__ptr=0,this.tree=a,this.root=f,this.level=f?f.level+1:1,this.x=b,this.y=c,this.hw=d,this.hh=e,this.t=c+e,this.b=c-e,this.l=b-d,this.r=b+d,this.branches=null,this.items=new Set}split(){if(this.branches||this.items.size<this.tree.maxItems||this.level>this.tree.maxLevel)return;const a=this.hw/2,b=this.hh/2;this.branches=[new e(this.tree,this.x-a,this.y+b,a,b,this),new e(this.tree,this.x+a,this.y+b,a,b,this),new e(this.tree,this.x-a,this.y-b,a,b,this),new e(this.tree,this.x+a,this.y-b,a,b,this)];for(const a of this.items){const b=this.tree.cells[a],d=c(b,this);0>d||(this.branches[d].items.add(a),b.__root=this.branches[d],this.items.delete(a))}}merge(){for(let a=this;null!=a;){if(!a.branches){a=a.root;continue}if(a.branches[0].branches||a.branches[0].items.size||a.branches[1].branches||a.branches[1].items.size||a.branches[2].branches||a.branches[2].items.size||a.branches[3].branches||a.branches[3].items.size)return;a.branches=null}}__init_ptr(){this.__ptr=this.tree.__offset,this.tree.__offset+=26+2*this.items.size,this.branches&&(this.branches[0].__init_ptr(),this.branches[1].__init_ptr(),this.branches[2].__init_ptr(),this.branches[3].__init_ptr())}__write(a){a.setFloat32(this.__ptr,this.x,!0),a.setFloat32(this.__ptr+4,this.y,!0),this.branches?(a.setUint32(this.__ptr+8,a.byteOffset+this.branches[0].__ptr,!0),a.setUint32(this.__ptr+12,a.byteOffset+this.branches[1].__ptr,!0),a.setUint32(this.__ptr+16,a.byteOffset+this.branches[2].__ptr,!0),a.setUint32(this.__ptr+20,a.byteOffset+this.branches[3].__ptr,!0)):a.setUint32(this.__ptr+8,0,!0),this.tree.__serialized+=this.items.size,a.setUint16(this.__ptr+24,this.items.size,!0);let b=this.__ptr+26;for(const c of this.items)a.setUint16(b,c,!0),b+=2;this.branches&&(this.branches[0].__write(a),this.branches[1].__write(a),this.branches[2].__write(a),this.branches[3].__write(a))}print(){console.log(`QuadNode at ${this.__ptr} has ${this.items.size} items: ${[...this.items].join(", ")}`),this.branches&&(this.branches[0].print(),this.branches[1].print(),this.branches[2].print(),this.branches[3].print())}}class f{constructor(a,b,c,d,f,g,h){this.__offset=0,this.cells=a,this.root=new e(this,b,c,d,f,null),this.maxLevel=g,this.maxItems=h,this.__serialized=0}insert(a){a.__root&&console.log("INSERTING CELL ALREADY IN QUADTREE");let b=this.root;for(;!0&&!!b.branches;){const d=c(a,b);if(0>d)break;b=b.branches[d]}a.__root=b,b.items.add(a.id),b.split()}remove(a){a.__root||console.log("REMOVING CELL NOT IN QUADTREE"),a.__root.items.delete(a.id)||console.log("ITEM NOT IN QUAD??",a.__root.items),a.__root.merge(),a.__root=null}update(a){a.__root||console.log("UPDATING CELL NOT IN QUADTREE");const b=a.__root;let e=a.__root;for(;!!e.root&&!(e=e.root,d(a,e)););for(;!0&&!!e.branches;){const b=c(a,e);if(0>b)break;e=e.branches[b]}b===e||(b.items.delete(a.id),e.items.add(a.id),a.__root=e,b.merge(),e.split())}swap(a,b){b.__root=a.__root,b.__root.items.delete(a.id),b.__root.items.add(b.id),a.__root=null}serialize(a){this.__offset=0,this.__serialized=0,this.root.__init_ptr(),this.root.__write(a);const b=this.__offset;return this.__offset=0,b}print(){this.root.print()}}f.Node=e,b.exports=f},{}],16:[function(a){const b=a("./network/sw-server"),c=new b,d=c.game.engine;d.setOptions({VIRUS_COUNT:1e3,PLAYER_MAX_CELLS:1024,PLAYER_AUTOSPLIT_SIZE:0,PLAYER_SPLIT_CAP:4,VIRUS_MONOTONE_POP:!0,EJECT_SIZE:40,EJECT_LOSS:40,EJECT_DELAY:25,PELLET_COUNT:1e3,PLAYER_SPAWN_SIZE:1500,MAP_HW:4095,MAP_HH:4095}),c.open(),(async()=>{const a=await fetch("/static/wasm/server.wasm"),b=await a.arrayBuffer();await d.init(b),d.start(),console.log("Shared worker server running")})()},{"./network/sw-server":11}]},{},[16]);